/*
 * EMQX API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 5.1.3
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type BridgeMqttCreationOpts struct {
	// The number of buffer workers. Only applicable for egress type bridges.<br/>For bridges only have ingress direction data flow, it can be set to 0 otherwise must be greater than 0.
	WorkerPoolSize int32 `json:"worker_pool_size,omitempty"`
	// Health check interval.
	HealthCheckInterval string `json:"health_check_interval,omitempty"`
	// Whether start the resource right after created.
	StartAfterCreated bool `json:"start_after_created,omitempty"`
	// Time interval to wait for an auto-started resource to become healthy before responding resource creation requests.
	StartTimeout string `json:"start_timeout,omitempty"`
	AutoRestartInterval *OneOfbridgeMqttCreationOptsAutoRestartInterval `json:"auto_restart_interval,omitempty"`
	// Query mode. Optional 'sync/async', default 'async'.
	QueryMode string `json:"query_mode,omitempty"`
	// Starting from the moment when the request enters the buffer, if the request remains in the buffer for the specified time or is sent but does not receive a response or acknowledgement in time, the request is considered expired.
	RequestTtl *OneOfbridgeMqttCreationOptsRequestTtl `json:"request_ttl,omitempty"`
	// Query inflight window. When query_mode is set to async, this config has to be set to 1 if messages from the same MQTT client have to be strictly ordered.
	InflightWindow int32 `json:"inflight_window,omitempty"`
	// Enable disk buffer queue (only applicable for egress bridges).<br/>When Enabled, messages will be buffered on disk when the bridge connection is down.<br/>When disabled the messages are buffered in RAM only.
	EnableQueue bool `json:"enable_queue,omitempty"`
	// Maximum number of bytes to buffer for each buffer worker.
	MaxBufferBytes string `json:"max_buffer_bytes,omitempty"`
}

/*
 * EMQX API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 5.1.3
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type EmqxMongodbTopology struct {
	// The maximum number of additional workers that can be created when all workers in the pool are busy. This helps to manage temporary spikes in workload by allowing more concurrent connections to the MongoDB server.
	MaxOverflow int32 `json:"max_overflow,omitempty"`
	// Period of time before workers that exceed the configured pool size (\"overflow\") to be terminated.
	OverflowTtl string `json:"overflow_ttl,omitempty"`
	// Period for checking if there are more workers than configured (\"overflow\").
	OverflowCheckPeriod string `json:"overflow_check_period,omitempty"`
	// The size of the latency window for selecting among multiple suitable MongoDB instances.
	LocalThresholdMs string `json:"local_threshold_ms,omitempty"`
	// The duration to attempt a connection before timing out.
	ConnectTimeoutMs string `json:"connect_timeout_ms,omitempty"`
	// The duration to attempt to send or to receive on a socket before the attempt times out.
	SocketTimeoutMs string `json:"socket_timeout_ms,omitempty"`
	// Specifies how long to block for server selection before throwing an exception.
	ServerSelectionTimeoutMs string `json:"server_selection_timeout_ms,omitempty"`
	// The maximum duration that a worker can wait for a connection to become available.
	WaitQueueTimeoutMs string `json:"wait_queue_timeout_ms,omitempty"`
	// Controls when the driver checks the state of the MongoDB deployment. Specify the interval between checks, counted from the end of the previous check until the beginning of the next one. If the number of connections is increased (which will happen, for example, if you increase the pool size), you may need to increase this period as well to avoid creating too many log entries in the MongoDB log file.
	HeartbeatFrequencyMs string `json:"heartbeat_frequency_ms,omitempty"`
	// Controls the minimum amount of time to wait between heartbeats.
	MinHeartbeatFrequencyMs string `json:"min_heartbeat_frequency_ms,omitempty"`
}
